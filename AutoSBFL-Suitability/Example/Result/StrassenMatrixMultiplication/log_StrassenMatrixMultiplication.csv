01, PrimitiveAssignment, 22, "a.length", "0"
02, PrimitiveAssignment, 112, "a.length", "0"
03, PrimitiveAssignment, 136, "iB", "0"
04, ConditionalsBoundary, 101, "i < n", "i <= n"
05, ConditionalsBoundary, 102, "j < n", "j <= n"
06, ConditionalsBoundary, 116, "i < n", "i <= n"
07, ConditionalsBoundary, 117, "j < n", "j <= n"
08, ConditionalsBoundary, 127, "i1 < c.length", "i1 <= c.length"
09, ConditionalsBoundary, 128, "j1 < c.length", "j1 <= c.length"
10, ConditionalsBoundary, 136, "i1 < c.length", "i1 <= c.length"
11, ConditionalsBoundary, 137, "j1 < c.length", "j1 <= c.length"
12, ChangeNumericLiteral, 27, "0", "1"
13, ChangeNumericLiteral, 27, "0", "1"
14, ChangeNumericLiteral, 27, "0", "1"
15, ChangeNumericLiteral, 27, "0", "1"
16, ChangeNumericLiteral, 31, "2", "3"
17, ChangeNumericLiteral, 32, "2", "3"
18, ChangeNumericLiteral, 32, "2", "3"
19, ChangeNumericLiteral, 34, "2", "3"
20, ChangeNumericLiteral, 35, "2", "3"
21, ChangeNumericLiteral, 35, "2", "3"
22, ChangeNumericLiteral, 36, "2", "3"
23, ChangeNumericLiteral, 37, "2", "3"
24, ChangeNumericLiteral, 38, "2", "3"
25, ChangeNumericLiteral, 41, "0", "1"
26, ChangeNumericLiteral, 42, "2", "3"
27, ChangeNumericLiteral, 43, "2", "3"
28, ChangeNumericLiteral, 44, "2", "3"
29, ChangeNumericLiteral, 44, "2", "3"
30, ChangeNumericLiteral, 47, "0", "1"
31, ChangeNumericLiteral, 48, "2", "3"
32, ChangeNumericLiteral, 49, "2", "3"
33, ChangeNumericLiteral, 49, "0", "1"
34, ChangeNumericLiteral, 50, "2", "3"
35, ChangeNumericLiteral, 87, "2", "3"
36, ChangeNumericLiteral, 88, "2", "3"
37, ChangeNumericLiteral, 89, "2", "3"
38, ChangeNumericLiteral, 102, "0", "1"
39, ChangeNumericLiteral, 127, "0", "1"
40, ChangeNumericLiteral, 136, "0", "1"
41, ChangeNumericLiteral, 137, "0", "1"
42, EmptyReturns, 92, "mat", "new int[][]{}"
43, EmptyReturns, 107, "c", "new int[][]{}"
44, EmptyReturns, 122, "c", "new int[][]{}"
45, Math, 27, "a[0][0] * b[0][0]", "a[0][0] / b[0][0]"
46, Math, 31, "n / 2", "n * 2"
47, Math, 31, "n / 2", "n * 2"
48, Math, 32, "n / 2", "n * 2"
49, Math, 32, "n / 2", "n * 2"
50, Math, 33, "n / 2", "n * 2"
51, Math, 33, "n / 2", "n * 2"
52, Math, 34, "n / 2", "n * 2"
53, Math, 34, "n / 2", "n * 2"
54, Math, 35, "n / 2", "n * 2"
55, Math, 37, "n / 2", "n * 2"
56, Math, 37, "n / 2", "n * 2"
57, Math, 38, "n / 2", "n * 2"
58, Math, 38, "n / 2", "n * 2"
59, Math, 43, "n / 2", "n * 2"
60, Math, 44, "n / 2", "n * 2"
61, Math, 49, "n / 2", "n * 2"
62, Math, 50, "n / 2", "n * 2"
63, Math, 88, "n / 2", "n * 2"
64, Math, 89, "n / 2", "n * 2"
65, Math, 118, "a[i][j] + b[i][j]", "a[i][j] - b[i][j]"
66, NegateConditionals, 26, "n == 1", "n != 1"
67, NegateConditionals, 116, "i < n", "i >= n"
68, NegateConditionals, 117, "j < n", "j >= n"
69, NegateConditionals, 127, "i1 < c.length", "i1 >= c.length"
70, NegateConditionals, 128, "j1 < c.length", "j1 >= c.length"
71, NegateConditionals, 137, "j1 < c.length", "j1 >= c.length"
72, Increments, 101, "i++", "i--"
73, Increments, 102, "j++", "j--"
74, Increments, 116, "i++", "i--"
75, Increments, 117, "j++", "j--"
76, Increments, 128, "j1++", "j1--"
77, Increments, 128, "j2++", "j2--"
78, Increments, 136, "i1++", "i1--"
79, Increments, 136, "i2++", "i2--"
80, Increments, 137, "j1++", "j1--"
81, Increments, 137, "j2++", "j2--"
82, EmptyAssignment, 24, "new int[n][n]", "new int[][]{}"
83, EmptyAssignment, 31, "new int[n / 2][n / 2]", "new int[][]{}"
84, EmptyAssignment, 32, "new int[n / 2][n / 2]", "new int[][]{}"
85, EmptyAssignment, 34, "new int[n / 2][n / 2]", "new int[][]{}"
86, EmptyAssignment, 36, "new int[n / 2][n / 2]", "new int[][]{}"
87, EmptyAssignment, 37, "new int[n / 2][n / 2]", "new int[][]{}"
88, EmptyAssignment, 38, "new int[n / 2][n / 2]", "new int[][]{}"
89, EmptyAssignment, 57, "multiply(add(a21，a22)，b11)", "new int[][]{}"
90, EmptyAssignment, 60, "multiply(a11，sub(b12，b22))", "new int[][]{}"
91, EmptyAssignment, 63, "multiply(a22，sub(b21，b11))", "new int[][]{}"
92, EmptyAssignment, 66, "multiply(add(a11，a12)，b22)", "new int[][]{}"
93, EmptyAssignment, 69, "multiply(sub(a21，a11)，add(b11，b12))", "new int[][]{}"
94, EmptyAssignment, 72, "multiply(sub(a12，a22)，add(b21，b22))", "new int[][]{}"
95, EmptyAssignment, 75, "add(sub(add(m1，m4)，m5)，m7)", "new int[][]{}"
96, EmptyAssignment, 78, "add(m3，m5)", "new int[][]{}"
97, EmptyAssignment, 81, "add(m2，m4)", "new int[][]{}"
98, EmptyAssignment, 84, "add(sub(add(m1，m3)，m2)，m6)", "new int[][]{}"
99, EmptyAssignment, 114, "new int[n][n]", "new int[][]{}"
